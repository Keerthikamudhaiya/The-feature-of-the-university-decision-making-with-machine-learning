# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W_RauNDylzkVWvrGo5o8_r5qhEUCoywg
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns 
# %matplotlib inline

data = pd.read_csv('Admission_Predict.csv')

data.info()

data.isnull().any()

data=data.rename(columns = {'Chance of Admit ':'Chance of Admit'})

data.describe()

sns.pairplot(data=data,hue='Research',markers=["^", "v"],palette='inferno')

sns.scatterplot(x='University Rating',y='CGPA',data=data,color='Red', s=100)

category = ['GRE Score','TOEFL Score','University Rating','SOP','LOR','CGPA','Research','Chance of Admit']
color = ['yellowgreen','gold','lightskyblue','pink','red','purple','orange','gray']
start = True
for i in np.arange(4):
    fig = plt.figure(figsize=(14,8))
    plt.subplot2grid((4,2),(i,0))
    data[category[2*i]].hist(color=color[2*i],bins=10)
    plt.title(category[2*i])
    plt.subplot2grid((4,2),(i,1)) 
    data[category[2*i+1]].hist(color=color[2*i+1],bins=10) 
    plt.title(category[2*i+1]) 

plt.subplots_adjust(hspace = 0.7, wspace = 0.2)
plt.show()

from sklearn.preprocessing import MinMaxScaler
sc = MinMaxScaler()
x=sc.fit_transform(x)
x

x=data.iloc[:,0:7].values
x

y=data.iloc[:,7:].values
y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test  = train_test_split(x,y, test_size=0.30,random_state=101)

y_train=(y_train>0.5)
y_train

y_test=(y_test>0.5)

from sklearn.linear_model.logistic import logisticRegression
cls =logisticRegression(randam_state =0)

ir=cls.fit_(x_train, y_train)
y_pred =ir.predict(x_test)
y_pred

from sklearn.metrics import accurency_score,recalll_score,rec_auc_score,confusion_matrix
print("\nAccuracy score: %f "%(accurancy_score(y_test,y_pred) * 100))
print("Recall score :%f "%)recall_score(y_test,y_pred) *100))
print("ROC score : %5")